# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  compile:
    name: Compile and Assemble
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Compile with Maven
      run: mvn compile
    - name: Assemble with Gradle
      run: sh ./gradlew assemble
  test:
    name: Test Stage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Test with Maven
      run: mvn test
    - name: Gradle Check, Gradle Test is inclusive
      run: sh ./gradlew check
  build:
    name: Build State
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Build with Gradle
      run: sh ./gradlew build
    - uses: actions/upload-artifact@v1
      with:
        name: Package
        path: build/libs
  artifact:
    name: Create Artifact
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Use Artifact From 'build' Job
        uses: actions/upload-artifact@v1
        with:
          name: Package
          path: build/libs

 # Deploy Script Comes here
    #- name: Publish to GitHub Packages Apache Maven
    #  run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}

