# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  commit_at:
    name: Commit Detail
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@0.3.0
      id: author-date
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
          return commit_details.data.author.date
    - run: echo $COMMITTED_AT
      env:
        COMMITTED_AT: ${{ steps.author-date.outputs.result }}
  compile:
    name: Setup
    #needs: commit_at
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Compile with Maven
      run: mvn compile
    - name: Assemble with Gradle
      run: sh ./gradlew assemble
  test:
    name: Test
    needs: compile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Test with Maven
      run: mvn test
    - name: Gradle Check, Gradle Test is inclusive
      run: sh ./gradlew check
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - uses: actions/github-script@0.3.0
    - name: Build with Gradle
      run: sh ./gradlew build
    - uses: actions/upload-artifact@v1
      with:
        name: JSON-java-${{ steps.author-date.outputs.result }}
        path: build/libs

 # Deploy Script Comes here
    #- name: Publish to GitHub Packages Apache Maven
    #  run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}

